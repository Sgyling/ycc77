[{"title":"一款支持闲鱼自动回复\\自动发货的神奇工具-带安装教程","url":"/2025/08/21/1-%E7%94%B5%E5%95%86%E5%B7%A5%E5%85%B71_%E5%92%B8%E9%B1%BC%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D/","content":"1-简介​\t一个功能完整的闲鱼自动回复和管理系统，支持多用户、多账号管理，具备智能回复、自动发货、自动确认发货、商品管理等企业级功能。\n​\t**注意:**工具演示在5.2\n​\t首先,该工具是免费的,无需收费的.\n​\t任何花钱购买的工具,请全部申请退款!\n\n2-核心特性🔐 多用户系统\n用户注册登录 - 支持邮箱验证码注册，图形验证码保护\n数据完全隔离 - 每个用户的数据独立存储，互不干扰\n权限管理 - 严格的用户权限控制和JWT认证\n安全保护 - 防暴力破解、会话管理、安全日志\n\n📱 多账号管理\n无限账号支持 - 每个用户可管理多个闲鱼账号\n独立运行 - 每个账号独立监控，互不影响\n实时状态 - 账号连接状态实时监控\n批量操作 - 支持批量启动、停止账号任务\n\n🤖 智能回复系统\n关键词匹配 - 支持精确关键词匹配回复\n指定商品回复 - 支持为特定商品设置专门的回复内容，优先级最高\n商品专用关键词 - 支持为特定商品设置专用关键词回复\n通用关键词 - 支持全局通用关键词，适用于所有商品\n批量导入导出 - 支持Excel格式的关键词批量导入导出\nAI智能回复 - 集成OpenAI API，支持上下文理解\n变量替换 - 回复内容支持动态变量（用户名、商品信息、商品ID等）\n优先级策略 - 指定商品回复 &gt; 商品专用关键词 &gt; 通用关键词 &gt; 默认回复 &gt; AI回复\n\n🚚 自动发货功能\n智能匹配 - 基于商品信息自动匹配发货规则\n多规格支持 - 支持同一商品的不同规格自动匹配对应卡券\n精确匹配+兜底机制 - 优先精确匹配规格，失败时自动降级到普通卡券\n延时发货 - 支持设置发货延时时间（0-3600秒）\n多种触发 - 支持付款消息、小刀消息等多种触发条件\n防重复发货 - 智能防重复机制，避免重复发货\n多种发货方式 - 支持固定文字、批量数据、API调用、图片发货等方式\n图片发货 - 支持上传图片并自动发送给买家，图片自动上传到CDN\n自动确认发货 - 检测到付款后自动调用闲鱼API确认发货，支持锁机制防并发\n防重复确认 - 智能防重复确认机制，避免重复API调用\n订单详情缓存 - 订单详情获取支持数据库缓存，大幅提升性能\n发货统计 - 完整的发货记录和统计功能\n\n🛍️ 商品管理\n自动收集 - 消息触发时自动收集商品信息\nAPI获取 - 通过闲鱼API获取完整商品详情\n多规格支持 - 支持多规格商品的规格信息管理\n批量管理 - 支持批量查看、编辑、切换多规格状态\n智能去重 - 自动去重，避免重复存储\n\n🔍 商品搜索功能\n真实数据获取 - 基于Playwright技术获取真实闲鱼商品数据\n智能排序 - 按”人想要”数量自动倒序排列\n多页搜索 - 支持一次性获取多页商品数据\n前端分页 - 灵活的前端分页显示\n商品详情 - 支持查看完整商品详情信息\n\n📊 系统监控\n实时日志 - 完整的操作日志记录和查看\n性能监控 - 系统资源使用情况监控\n健康检查 - 服务状态健康检查\n\n📁 数据管理\nExcel导入导出 - 支持关键词数据的Excel格式导入导出\n模板生成 - 自动生成包含示例数据的导入模板\n批量操作 - 支持批量添加、更新关键词数据\n数据验证 - 导入时自动验证数据格式和重复性\n多规格卡券管理 - 支持创建和管理多规格卡券\n发货规则管理 - 支持多规格发货规则的创建和管理\n数据备份 - 自动数据备份和恢复\n一键部署 - 提供预构建Docker镜像，无需编译即可快速部署\n\n3-项目结构点击展开查看详细项目结构xianyu-auto-reply/\n├── 📄 核心文件\n│   ├── Start.py                    # 项目启动入口，初始化所有服务\n│   ├── XianyuAutoAsync.py         # 闲鱼WebSocket连接和消息处理核心\n│   ├── reply_server.py            # FastAPI Web服务器和完整API接口\n│   ├── db_manager.py              # SQLite数据库管理，支持多用户数据隔离\n│   ├── cookie_manager.py          # 多账号Cookie管理和任务调度\n│   ├── ai_reply_engine.py         # AI智能回复引擎，支持多种AI模型\n│   ├── file_log_collector.py      # 实时日志收集和管理系统\n│   ├── config.py                  # 全局配置文件管理器\n│   ├── secure_confirm_ultra.py    # 自动确认发货模块（多层加密保护）\n│   └── secure_freeshipping_ultra.py # 自动免拼发货模块（多层加密保护）\n├── 🛠️ 工具模块\n│   └── utils/\n│       ├── xianyu_utils.py        # 闲鱼API工具函数（加密、签名、解析）\n│       ├── message_utils.py       # 消息格式化和处理工具\n│       ├── ws_utils.py            # WebSocket客户端封装\n│       ├── qr_login.py            # 二维码登录功能\n│       ├── item_search.py         # 商品搜索功能（基于Playwright，无头模式）\n│       ├── order_detail_fetcher.py # 订单详情获取工具\n│       ├── image_utils.py         # 图片处理工具（压缩、格式转换）\n│       └── image_uploader.py      # 图片上传到CDN工具\n├── 🌐 前端界面\n│   └── static/\n│       ├── index.html             # 主管理界面（集成所有功能模块）\n│       ├── login.html             # 用户登录页面\n│       ├── register.html          # 用户注册页面（邮箱验证）\n│       ├── user_management.html   # 用户管理页面（管理员功能）\n│       ├── data_management.html   # 数据管理页面（导入导出）\n│       ├── log_management.html    # 日志管理页面（实时日志查看）\n│       ├── item_search.html       # 商品搜索页面（独立版本）\n│       ├── js/\n│       │   ├── app.js             # 主要JavaScript逻辑\n│       │   └── modules/           # 模块化JavaScript文件\n│       ├── css/\n│       │   ├── variables.css      # CSS变量定义\n│       │   ├── layout.css         # 布局样式\n│       │   ├── components.css     # 组件样式\n│       │   ├── accounts.css       # 账号管理样式\n│       │   ├── keywords.css       # 关键词管理样式\n│       │   ├── items.css          # 商品管理样式\n│       │   ├── logs.css           # 日志管理样式\n│       │   ├── notifications.css  # 通知样式\n│       │   ├── dashboard.css      # 仪表板样式\n│       │   ├── admin.css          # 管理员样式\n│       │   └── app.css            # 主应用样式\n│       ├── lib/\n│       │   ├── bootstrap/         # Bootstrap框架\n│       │   └── bootstrap-icons/   # Bootstrap图标\n│       ├── uploads/\n│       │   └── images/            # 上传的图片文件\n│       ├── xianyu_js_version_2.js # 闲鱼JavaScript工具库\n│       ├── wechat-group.png       # 微信群二维码\n│       └── qq-group.png           # QQ群二维码\n├── 🐳 Docker部署\n│   ├── Dockerfile                 # Docker镜像构建文件\n│   ├── docker-compose.yml        # Docker Compose一键部署配置\n│   ├── docker-deploy.sh          # Docker部署管理脚本（Linux/macOS）\n│   ├── docker-deploy.bat         # Docker部署管理脚本（Windows）\n│   └── entrypoint.sh              # Docker容器启动脚本\n├── 📋 配置文件\n│   ├── global_config.yml         # 全局配置文件（WebSocket、API等）\n│   ├── requirements.txt          # Python依赖包列表（精简版）\n│   ├── .gitignore                # Git忽略文件配置\n│   └── README.md                 # 项目说明文档\n└── 📊 数据目录（运行时创建）\n    ├── data/                     # 数据目录（Docker挂载）\n    │   └── xianyu_data.db        # SQLite数据库文件\n    ├── logs/                     # 按日期分割的日志文件\n    └── backups/                  # 数据备份文件\n\n\n\n\n4-安装以及使用环境要求\nPython: 3.11+\nNode.js: 16+ (用于JavaScript执行)\n系统: Windows&#x2F;Linux&#x2F;macOS\n内存: 建议2GB+\n存储: 建议10GB+\nDocker: 20.10+ (Docker部署)\nDocker Compose: 2.0+ (Docker部署)\n\n4.1 小白安装(安装即用)4.1.1 安装Docker首先,你需要安装docker\n\nWindows 请自行搜索下载Docker\n\n\n\n\nLinux 下,请自行搜索下载Docker\n\n4.1.2 Linux\\Mac OS 本地安装\n创建目录\n\nmkdir -p xianyu-auto-reply\n\n启动容器\n\ndocker run -d   -p 8080:8080   -v $PWD&#x2F;xianyu-auto-reply&#x2F;:&#x2F;app&#x2F;data&#x2F;   –name xianyu-auto-reply   registry.cn-shanghai.aliyuncs.com&#x2F;zhinian-software&#x2F;xianyu-auto-reply:1.0\n\n启动系统\n\nhttp://localhost:8080\n\nhttp://127.0.0.1:8080\n\n上方两个链接均可访问.\n\n\n4.1.3 Windows 本地安装\n创建数据目录\n\nmkdir xianyu-auto-reply\n\n启动容器\n\ndocker run -d -p 8080:8080 -v %cd%&#x2F;xianyu-auto-reply&#x2F;:&#x2F;app&#x2F;data&#x2F; –name xianyu-auto-reply registry.cn-shanghai.aliyuncs.com&#x2F;zhinian-software&#x2F;xianyu-auto-reply:1.0\n\n访问系统\n\nhttp://localhost:8080\n\nhttp://127.0.0.1:8080\n\n上方两个链接均可访问.\n\n\n4.1.4 云端安装\n与上方本地安装方式一致,但需要注意查看云端的ip\n1.Linux安装net-tools工具套\nsudo apt install net-tools # debian系列\nsudo yum install net-tools # redhat系列\nsudo pacman -Sy net-tools # arch系列\n2.Windows下无需下载net-tools\n3.开放防火墙8080端口(不会的看服务器文档)\n4.通过上方本地安装的教程,进行云端安装\n5.访问:http:&#x2F;&#x2F;你的ip:8080  进行访问即可\n\n4.2 源码构建部署(推荐资深玩家部署)4.2.1 Linux\\MAC OS 构建需要安装python环境,最好在python3.11以上(自行百度)\n\n克隆项目\n\n\ngit clone https://github.com/zhinianboke/xianyu-auto-reply.git\ncd xianyu-auto-reply\n\n\n设置脚本执行权限（Linux&#x2F;macOS）\n\n\nchmod +x docker-deploy.sh\n\n\n一键部署（自动构建镜像）\n\n\n.&#x2F;docker-deploy.sh\n\n\n访问系统\n\n\nhttp://localhost:8080\n\n4.2.2 Windows 构建 需要安装python环境,最好在python3.11以上(自行百度)\n\n克隆项目\n\ngit clone https://github.com/zhinianboke/xianyu-auto-reply.git\n\ncd xianyu-auto-reply\n\n使用Windows批处理脚本（推荐）\n\ndocker-deploy.bat\n\n或者使用Git Bash&#x2F;WSL\n\nbash docker-deploy.sh\n\n或者直接使用Docker Compose\n\ndocker-compose up -d –build\n\n\n5-核心功能以及演示5.1 核心功能🚀 自动回复系统\n智能关键词匹配 - 支持精确匹配和模糊匹配，灵活配置回复规则\nAI智能回复 - 集成多种AI模型（通义千问、GPT等），智能理解用户意图\n多账号管理 - 支持同时管理多个闲鱼账号，独立配置和运行\n实时消息处理 - WebSocket长连接，毫秒级响应用户消息\n自定义回复模板 - 支持占位符和动态内容，个性化回复体验\n\n🛒 自动发货系统\n智能订单识别 - 自动识别虚拟商品订单，精准匹配发货规则\n多重安全验证 - 超级加密保护，防止误操作和数据泄露\n批量处理能力 - 支持批量确认发货，提高处理效率\n异常处理机制 - 完善的错误处理和重试机制，确保发货成功\n多渠道通知 - 支持QQ、钉钉、邮件等多种发货通知方式\n\n👥 多用户系统\n用户注册登录 - 支持邮箱验证和图形验证码，安全可靠\n权限管理 - 管理员和普通用户权限分离，精细化权限控制\n数据隔离 - 每个用户的数据完全隔离，保护隐私安全\n会话管理 - JWT Token认证，支持自动续期和安全登出\n\n📊 数据管理\n商品信息管理 - 自动获取和同步商品信息，实时更新状态\n订单数据统计 - 详细的订单数据分析和可视化图表\n关键词管理 - 灵活的关键词配置，支持正则表达式\n数据导入导出 - 支持Excel格式的批量数据操作\n自动备份 - 定期自动备份重要数据，防止数据丢失\n\n🔍 商品搜索\n真实数据获取 - 基于Playwright技术，无头模式获取真实闲鱼商品数据\n多页搜索 - 支持分页搜索和批量获取，无限制数据采集\n智能排序 - 按”人想要”数量自动倒序排列，优先显示热门商品\n数据可视化 - 美观的商品展示界面，支持排序和筛选\n前端分页 - 灵活的前端分页显示，提升用户体验\n账号状态验证 - 自动检查cookies启用状态，确保搜索功能正常\n\n📱 通知系统\n多渠道支持 - QQ、钉钉、邮件、微信、Telegram等6种通知方式\n智能配置 - 可视化配置界面，支持复杂参数和加密设置\n实时推送 - 重要事件实时通知，及时了解系统状态\n通知模板 - 自定义通知内容和格式，个性化消息推送\n\n🔐 安全特性\nCookie安全管理 - 加密存储用户凭证，定期自动刷新\nToken自动刷新 - 智能检测和刷新过期Token，保持连接稳定\n操作日志 - 详细记录所有操作日志，支持审计和追踪\n异常监控 - 实时监控系统异常和错误，主动预警\n\n🎨 用户界面\n现代化设计 - 基于Bootstrap 5的响应式界面，美观易用\n多主题支持 - 支持明暗主题切换，个性化界面体验\n移动端适配 - 完美适配手机和平板设备，随时随地管理\n实时更新 - 界面数据实时更新，无需手动刷新\n\n5.2 工具演示登录页面\n注册页面\n首页\n账号管理\n商品管理\n订单管理\n自动回复\n指定商品回复\n自动发货\n消息通知支持平台\n用户管理\n6-结尾想说的话\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["电商工具"],"tags":["闲鱼","工具教程"]},{"title":"幻影（Phantom）SRC漏洞挖掘辅助工具","url":"/2025/08/23/4-%E5%B9%BB%E5%BD%B1(Phantom)Src%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/","content":"1- 简介​\t主要用于SRC的漏洞挖掘.\n​\t所处位置:https://yancy77.cn/penetration.html  -&gt; 插件\\扩展板块 -&gt;幻影(Phantom) SRC漏洞挖掘辅助工具\n2- 特性概览\n一键基础扫描：自动提取页面内的API、URL、域名、邮箱、手机号、路径、参数、注释、多类Token&#x2F;Key等\n深度梯度扫描：梯度链接&#x2F;资源爬取，支持梯度、超时配置，并在新闻中运行，不阻塞当前操作\n批量API测试：对扫描到的分类入口进行GET&#x2F;POST批量测量，并发与超时可配置，结果支持复制\n导出能力：支持JSON与Excel（.xls XML格式）两种导出\n自定义规则则：内置丰富的默认规则，可在「设置」中按分类自定义规则则并即时生效\nCookie支持：可一键获取当前站点Cookie并保存，然后需要鉴权的请求场景\n去重与过滤：内置强化过滤器（域名&#x2F;邮箱&#x2F;手机号&#x2F;API），减少误报\n自动与增量：页面加载、DOM变化与定时策略触发静默扫描；深度扫描过程中分层&#x2F;分批实时合并与展示\n\n3- 安装3.1 有git命令的安装方式打开终端,进入想下载的目录,运行:\n\ngit clone https://github.com/Team-intN18-SoybeanSeclab/Phantom.git\n\n\n\n打开google浏览器或者edge浏览器扩展插件页面\n\n\n\n然后选择对应的文件夹\n\n\n\n\n\n将这个工具固定在插件栏即可.\n\n随后,即可正常使用了\n\n\n\n\n3.2 没有git命令的安装方式\n点击下方链接,进行下载\nhttps://github.com/Team-intN18-SoybeanSeclab/Phantom/releases/download/1.6.7/Phantom.v1.6.7.zip\n下载完成后,打开浏览器的插件页面\n随后将文件解压出来,在浏览器中加载已解压的扩展程序.\n选择对应的目录,即可安装该插件\n\n\n4- 使用教程\n基础扫描\n\n\n深度扫描\n\n\n批量API测试\n\n\n导出文件\n\n自定义正则表达式\n\n指定Cookie\n\n关于界面\n\n\n5- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["浏览器插件","SRC挖掘"]},{"title":"JSAPIscan 扫描工具_安装以及使用","url":"/2025/08/22/2-JSAPlscan-JS%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/","content":"1-简介​\t注意: 该软件非开源软件,请自行掂量.\n​\t一个go语言开发的js文件发现和接口扫描工具，专门用于从JavaScript文件中提取API接口信息并进行安全测试。\n2-功能特性\n🔍 智能API发现: 自动从JavaScript文件中提取API端点路径\n📱 多框架支持: 支持Webpack、Vue、React等现代前端框架的JS文件解析\n🚀 高性能扫描: 多线程并发处理，支持自定义线程数\n🛡️ 安全测试: 内置未授权访问测试和POC验证功能（POC预计0.3开放）\n📊 智能输出: 自动生成CSV报告和详细日志\n🔧 灵活配置: 支持批量URL扫描、自定义深度等\n📁 自动管理: 自动创建时间戳文件夹，结果分类存储\n\n3-下载安装​\t浏览器访问：https://pan.quark.cn/s/67b7123b8cbf\n​\t此链接包含Windows\\Linux 双版本,下载后可直接进行使用.\n4-使用教程4.1 Linux 使用教程.\\JSAPIscan_linux -h # 查看帮助\n\n\n4.2 Windows 使用教程JSAPIscan_windows.exe -h #查看帮助\n\n\n4.2.1 用法详情JSAPIscan_windows.exe -u https://www.baidu.com # 扫描单个url\n\n\n\nJSAPIscan_windows.exe -f urls.txt  # 批量扫描URL  urls.txt里面包含多个url,一行一个\n\n\n\nJSAPIscan_windows.exe -u https://www.baidu.com -t 20 -d 5  # 设置线程数和爬取深度\n\n\n\n4.2.2 其他用法JSAPIscan.exe -u https://example.com -auto # 启用自动接口测试（-auto 是未授权访问检测 不加只会爬取）\n\nJSAPIscan.exe -u https://example.com -auto -aparms # 携带参数进行测试\n\nJSAPIscan.exe -u https://example.com -auto -aparms -apoc # 启用POC测试 \n\nJSAPIscan.exe -f urls.txt -auto -t 15 -d 4  # 批量扫描并自动测试\n\n\n\n4.3 参数详情\n\n\n参数\n说明\n默认值\n示例\n\n\n\n-u\n目标URL\n-\n-u https://example.com\n\n\n-f\nURL文件路径\n-\n-f urls.txt\n\n\n-t\n线程数\n10\n-t 20\n\n\n-d\n爬取深度\n3\n-d 5\n\n\n-auto\n启用自动接口测试\nfalse\n-auto\n\n\n-aparms\n携带参数测试\nfalse\n-aparms\n\n\n-apoc\n启用POC测试\nfalse\n-apoc\n\n\n-h\n显示帮助信息\nfalse\n-h\n\n\n-sc\n不显示相关状态码\n“”\n-sc\n\n\n-o\n输出文件类型\n“txt”\ntxt、html\n\n\n-k\n只输出关键信息\nfalse\n&#96;&#96;\n\n\n5-支持的框架\nWebpack: 自动解析chunk.js文件\nVue.js: 识别Vue组件中的API调用\nReact: 支持React应用的JS文件分析\n通用JS: 支持标准JavaScript文件解析\n\n6- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","信息收集工具"]},{"title":"Save Multiple URLs_快速获取网页中URL的浏览器插件","url":"/2025/08/22/3-Svae%20Multiple%20URLs_%E5%BF%AB%E9%80%9F%E4%BF%9D%E5%AD%98%E5%BD%93%E5%89%8D%E6%89%80%E6%9C%89%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5%E7%9A%84URL/","content":"1- 简介​\tSave Multiple URLs 是一个专为渗透测试人员、红队工程师、网络安全研究者打造的浏览器插件，便于快速保存当前所有打开的网页 URL，避免在测试过程中遗漏关键目标。\n2- 功能特点\n✅ 一键获取当前所有浏览器标签页的 URL\n✅ 支持复制 URL 到剪贴板\n✅ 支持导出 URL 为 .txt 文本文件\n✅ 界面简洁，操作便捷\n✅ 无需网络权限，纯本地操作，安全可靠\n\n3- 使用场景\n在对目标进行信息收集、目录遍历、页面测试时，临时打开了大量标签页，使用插件一键保存，避免手动记录出错。\n渗透测试项目报告撰写前，快速整理访问过的所有目标 URL。\n日常浏览多个测试站点时，便于归档保存以供后续分析。\n\n4- 使用截图\n5- 安装方式\n终端运行:  git clone https://github.com/exp3n5ive/Save-Multiple-URLs.git    (或者打开:https://github.com/exp3n5ive/Save-Multiple-URLs 下载这个项目)\n打开浏览器 chrome://extensions/\n打开「开发者模式」\n点击「加载已解压的扩展程序」，选择项目目录\n\n6- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["浏览器插件"]},{"title":"测试文章","url":"/2025/08/20/google-chrome-%E5%8F%96%E8%AF%81/","content":"1-简介谢谢小星星\n","categories":["电子取证"],"tags":["浏览器","取证技术"]}]