[{"title":"yancy77.cn(详细说明)-一个专属于黑客的资源站","url":"/2025/08/29/10-%E6%9D%A8CC%E8%B5%84%E6%BA%90%E7%AB%99/","content":"1- 杨CC对工具的评价​\t这是我自己的一个网站,是一个非常适合缺乏工具的一些渗透师傅,或者想要学习黑客技术的小白,这款网站都非常适合.\n​\t而且在网站中,也可以找到自己任何想要的工具.\n2- 网站分类简介\n首页\n\n而且首页还包含了最新发现的免杀.工具\n渗透测试工具\n\n而且渗透测试工具中,也包含了多种分类.当前共计16个分类,分别为:\n信息收集工具\\爆破工具\\在线工具\\注入工具\\远控工具\\逆向工具\\漏洞扫描工具\\内网工具\\字典工具\\流量&#x2F;测压工具\\综合工具包\\防御&#x2F;蓝队工具\\POC&#x2F;EXP模块\\Webshell板块\\插件板块\\靶场搭建工具等多个板块.\n游戏资源.\n\n游戏资源包含了pc游戏\\手机游戏\\以及一些修改器,而且如果可以的话,并且可能会包含一些Steam上的十八加的游戏.\n教程资源\n\n教程资源包,包含了如何训练AI模型\\取证的学习\\编程学习\\从0开始学习渗透\\也包含一些国学,都会在内.\n其他资源\n\n其他资源中,包含了设计师的资源\\源码&#x2F;毕业设计的源代码(包含论文)\\电脑常用工具\\手机工具\\一些镜像\\或者一些其他资源,其他资源中也包含了一些可能是接码平台\\其他乱七八糟的资源.而且这个网站还处于持续更新中.\n杨CC技术录\n\n杨CC技术录,是一个单独的网站,里面包含了yancy77.cn里面的一些教程或者一些技术文章,也是在持续更新,而且杨CC技术录和yancy77.cn,同样属于一个人麾下的网站.\n杨CC技术录网址:ycc77.com\n两个网站相辅相成\n\n3- 如何区分网站中的工具或者游戏是否有视频和教程?3.1 没有教程和视频的工具\n​\t我们可以在图片中看到,一些软件鼠标放上去后,最左边的颜色条,为红色则说明该工具还没有视频或者教程.\n​\t如果我们在ycc77.com(杨CC技术录)中没有找到对应教程,可以在B站,搜索:疯狂的杨CC,来观看视频教程.\n\n下图也同样为没有视频或者文章教程\n\n\n​\t鼠标没有放上去的时候,最左边的颜色条为黄色的,说明还没有录制相关视频或者教程文章\n3.2 有视频教程或者介绍文章的工具\n​\t鼠标在放上去之前,左边颜色条呈现为蓝色的工具,则是有相关教程或者文章.\n​\t如果杨CC技术录(ycc77.com)中未找到相关工具教程,可以去B站搜索:疯狂的杨CC,来获取视频教程.\n\n如下图,鼠标放上去后同样为有相关视频或者文章的工具(那个黄点是我鼠标所在位置)\n\n\n4- 部分渗透工具介绍\n信息收集工具\n\n可以参考上图中的说明,已经包含了指纹 - POC - 自动扫描 - 企业信息收集- 资产测绘 - 绕WAF - 端口扫描等多个范围内的工具\n\n\n\n\n爆破工具\n\n\n\n其中包括子域名爆破\\目录爆破\\WiFi密码爆破\\还有一些phpMyAdmin爆破工具\\Webshell\\一句话木马等很多相关的爆破工具\n\n\n\n\n在线工具(由于部分工具上传图床后会封号,所以就打码了)\n\n\n\n在线工具就是直接访问网页就可以使用的一些工具,目前也包含了:Whois查询\\旁站\\ip反查\\域名\\备案\\指纹\\空间测绘等多种在线工具\n\n\n\n\n注入工具\n\n\n\n目前注入工具也包含了XSS注入和SQL注入的工具.\n\n\n\n\n逆向工具\n\n\n\n逆向工具中包含了:代码审计\\Windows逆向\\Android逆向\\蜕壳工具\\以及小程序逆向工具.\n\n其他板块工具太多,所以就不再一一介绍.\n\n\n\n\n\n5- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["网站推荐","工具教程"]},{"title":"一款支持闲鱼自动回复\\自动发货的神奇工具-带安装教程","url":"/2025/08/21/1-%E7%94%B5%E5%95%86%E5%B7%A5%E5%85%B71_%E5%92%B8%E9%B1%BC%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D/","content":"1-简介​\t一个功能完整的闲鱼自动回复和管理系统，支持多用户、多账号管理，具备智能回复、自动发货、自动确认发货、商品管理等企业级功能。\n​\t**注意:**工具演示在5.2\n​\t首先,该工具是免费的,无需收费的.\n​\t任何花钱购买的工具,请全部申请退款!\n\n2-核心特性🔐 多用户系统\n用户注册登录 - 支持邮箱验证码注册，图形验证码保护\n数据完全隔离 - 每个用户的数据独立存储，互不干扰\n权限管理 - 严格的用户权限控制和JWT认证\n安全保护 - 防暴力破解、会话管理、安全日志\n\n📱 多账号管理\n无限账号支持 - 每个用户可管理多个闲鱼账号\n独立运行 - 每个账号独立监控，互不影响\n实时状态 - 账号连接状态实时监控\n批量操作 - 支持批量启动、停止账号任务\n\n🤖 智能回复系统\n关键词匹配 - 支持精确关键词匹配回复\n指定商品回复 - 支持为特定商品设置专门的回复内容，优先级最高\n商品专用关键词 - 支持为特定商品设置专用关键词回复\n通用关键词 - 支持全局通用关键词，适用于所有商品\n批量导入导出 - 支持Excel格式的关键词批量导入导出\nAI智能回复 - 集成OpenAI API，支持上下文理解\n变量替换 - 回复内容支持动态变量（用户名、商品信息、商品ID等）\n优先级策略 - 指定商品回复 &gt; 商品专用关键词 &gt; 通用关键词 &gt; 默认回复 &gt; AI回复\n\n🚚 自动发货功能\n智能匹配 - 基于商品信息自动匹配发货规则\n多规格支持 - 支持同一商品的不同规格自动匹配对应卡券\n精确匹配+兜底机制 - 优先精确匹配规格，失败时自动降级到普通卡券\n延时发货 - 支持设置发货延时时间（0-3600秒）\n多种触发 - 支持付款消息、小刀消息等多种触发条件\n防重复发货 - 智能防重复机制，避免重复发货\n多种发货方式 - 支持固定文字、批量数据、API调用、图片发货等方式\n图片发货 - 支持上传图片并自动发送给买家，图片自动上传到CDN\n自动确认发货 - 检测到付款后自动调用闲鱼API确认发货，支持锁机制防并发\n防重复确认 - 智能防重复确认机制，避免重复API调用\n订单详情缓存 - 订单详情获取支持数据库缓存，大幅提升性能\n发货统计 - 完整的发货记录和统计功能\n\n🛍️ 商品管理\n自动收集 - 消息触发时自动收集商品信息\nAPI获取 - 通过闲鱼API获取完整商品详情\n多规格支持 - 支持多规格商品的规格信息管理\n批量管理 - 支持批量查看、编辑、切换多规格状态\n智能去重 - 自动去重，避免重复存储\n\n🔍 商品搜索功能\n真实数据获取 - 基于Playwright技术获取真实闲鱼商品数据\n智能排序 - 按”人想要”数量自动倒序排列\n多页搜索 - 支持一次性获取多页商品数据\n前端分页 - 灵活的前端分页显示\n商品详情 - 支持查看完整商品详情信息\n\n📊 系统监控\n实时日志 - 完整的操作日志记录和查看\n性能监控 - 系统资源使用情况监控\n健康检查 - 服务状态健康检查\n\n📁 数据管理\nExcel导入导出 - 支持关键词数据的Excel格式导入导出\n模板生成 - 自动生成包含示例数据的导入模板\n批量操作 - 支持批量添加、更新关键词数据\n数据验证 - 导入时自动验证数据格式和重复性\n多规格卡券管理 - 支持创建和管理多规格卡券\n发货规则管理 - 支持多规格发货规则的创建和管理\n数据备份 - 自动数据备份和恢复\n一键部署 - 提供预构建Docker镜像，无需编译即可快速部署\n\n3-项目结构点击展开查看详细项目结构xianyu-auto-reply/\n├── 📄 核心文件\n│   ├── Start.py                    # 项目启动入口，初始化所有服务\n│   ├── XianyuAutoAsync.py         # 闲鱼WebSocket连接和消息处理核心\n│   ├── reply_server.py            # FastAPI Web服务器和完整API接口\n│   ├── db_manager.py              # SQLite数据库管理，支持多用户数据隔离\n│   ├── cookie_manager.py          # 多账号Cookie管理和任务调度\n│   ├── ai_reply_engine.py         # AI智能回复引擎，支持多种AI模型\n│   ├── file_log_collector.py      # 实时日志收集和管理系统\n│   ├── config.py                  # 全局配置文件管理器\n│   ├── secure_confirm_ultra.py    # 自动确认发货模块（多层加密保护）\n│   └── secure_freeshipping_ultra.py # 自动免拼发货模块（多层加密保护）\n├── 🛠️ 工具模块\n│   └── utils/\n│       ├── xianyu_utils.py        # 闲鱼API工具函数（加密、签名、解析）\n│       ├── message_utils.py       # 消息格式化和处理工具\n│       ├── ws_utils.py            # WebSocket客户端封装\n│       ├── qr_login.py            # 二维码登录功能\n│       ├── item_search.py         # 商品搜索功能（基于Playwright，无头模式）\n│       ├── order_detail_fetcher.py # 订单详情获取工具\n│       ├── image_utils.py         # 图片处理工具（压缩、格式转换）\n│       └── image_uploader.py      # 图片上传到CDN工具\n├── 🌐 前端界面\n│   └── static/\n│       ├── index.html             # 主管理界面（集成所有功能模块）\n│       ├── login.html             # 用户登录页面\n│       ├── register.html          # 用户注册页面（邮箱验证）\n│       ├── user_management.html   # 用户管理页面（管理员功能）\n│       ├── data_management.html   # 数据管理页面（导入导出）\n│       ├── log_management.html    # 日志管理页面（实时日志查看）\n│       ├── item_search.html       # 商品搜索页面（独立版本）\n│       ├── js/\n│       │   ├── app.js             # 主要JavaScript逻辑\n│       │   └── modules/           # 模块化JavaScript文件\n│       ├── css/\n│       │   ├── variables.css      # CSS变量定义\n│       │   ├── layout.css         # 布局样式\n│       │   ├── components.css     # 组件样式\n│       │   ├── accounts.css       # 账号管理样式\n│       │   ├── keywords.css       # 关键词管理样式\n│       │   ├── items.css          # 商品管理样式\n│       │   ├── logs.css           # 日志管理样式\n│       │   ├── notifications.css  # 通知样式\n│       │   ├── dashboard.css      # 仪表板样式\n│       │   ├── admin.css          # 管理员样式\n│       │   └── app.css            # 主应用样式\n│       ├── lib/\n│       │   ├── bootstrap/         # Bootstrap框架\n│       │   └── bootstrap-icons/   # Bootstrap图标\n│       ├── uploads/\n│       │   └── images/            # 上传的图片文件\n│       ├── xianyu_js_version_2.js # 闲鱼JavaScript工具库\n│       ├── wechat-group.png       # 微信群二维码\n│       └── qq-group.png           # QQ群二维码\n├── 🐳 Docker部署\n│   ├── Dockerfile                 # Docker镜像构建文件\n│   ├── docker-compose.yml        # Docker Compose一键部署配置\n│   ├── docker-deploy.sh          # Docker部署管理脚本（Linux/macOS）\n│   ├── docker-deploy.bat         # Docker部署管理脚本（Windows）\n│   └── entrypoint.sh              # Docker容器启动脚本\n├── 📋 配置文件\n│   ├── global_config.yml         # 全局配置文件（WebSocket、API等）\n│   ├── requirements.txt          # Python依赖包列表（精简版）\n│   ├── .gitignore                # Git忽略文件配置\n│   └── README.md                 # 项目说明文档\n└── 📊 数据目录（运行时创建）\n    ├── data/                     # 数据目录（Docker挂载）\n    │   └── xianyu_data.db        # SQLite数据库文件\n    ├── logs/                     # 按日期分割的日志文件\n    └── backups/                  # 数据备份文件\n\n\n\n\n4-安装以及使用环境要求\nPython: 3.11+\nNode.js: 16+ (用于JavaScript执行)\n系统: Windows&#x2F;Linux&#x2F;macOS\n内存: 建议2GB+\n存储: 建议10GB+\nDocker: 20.10+ (Docker部署)\nDocker Compose: 2.0+ (Docker部署)\n\n4.1 小白安装(安装即用)4.1.1 安装Docker首先,你需要安装docker\n\nWindows 请自行搜索下载Docker\n\n\n\n\nLinux 下,请自行搜索下载Docker\n\n4.1.2 Linux\\Mac OS 本地安装\n创建目录\n\nmkdir -p xianyu-auto-reply\n\n启动容器\n\ndocker run -d   -p 8080:8080   -v $PWD&#x2F;xianyu-auto-reply&#x2F;:&#x2F;app&#x2F;data&#x2F;   –name xianyu-auto-reply   registry.cn-shanghai.aliyuncs.com&#x2F;zhinian-software&#x2F;xianyu-auto-reply:1.0\n\n启动系统\n\nhttp://localhost:8080\n\nhttp://127.0.0.1:8080\n\n上方两个链接均可访问.\n\n\n4.1.3 Windows 本地安装\n创建数据目录\n\nmkdir xianyu-auto-reply\n\n启动容器\n\ndocker run -d -p 8080:8080 -v %cd%&#x2F;xianyu-auto-reply&#x2F;:&#x2F;app&#x2F;data&#x2F; –name xianyu-auto-reply registry.cn-shanghai.aliyuncs.com&#x2F;zhinian-software&#x2F;xianyu-auto-reply:1.0\n\n访问系统\n\nhttp://localhost:8080\n\nhttp://127.0.0.1:8080\n\n上方两个链接均可访问.\n\n\n4.1.4 云端安装\n与上方本地安装方式一致,但需要注意查看云端的ip\n1.Linux安装net-tools工具套\nsudo apt install net-tools # debian系列\nsudo yum install net-tools # redhat系列\nsudo pacman -Sy net-tools # arch系列\n2.Windows下无需下载net-tools\n3.开放防火墙8080端口(不会的看服务器文档)\n4.通过上方本地安装的教程,进行云端安装\n5.访问:http:&#x2F;&#x2F;你的ip:8080  进行访问即可\n\n4.2 源码构建部署(推荐资深玩家部署)4.2.1 Linux\\MAC OS 构建需要安装python环境,最好在python3.11以上(自行百度)\n\n克隆项目\n\n\ngit clone https://github.com/zhinianboke/xianyu-auto-reply.git\ncd xianyu-auto-reply\n\n\n设置脚本执行权限（Linux&#x2F;macOS）\n\n\nchmod +x docker-deploy.sh\n\n\n一键部署（自动构建镜像）\n\n\n.&#x2F;docker-deploy.sh\n\n\n访问系统\n\n\nhttp://localhost:8080\n\n4.2.2 Windows 构建 需要安装python环境,最好在python3.11以上(自行百度)\n\n克隆项目\n\ngit clone https://github.com/zhinianboke/xianyu-auto-reply.git\n\ncd xianyu-auto-reply\n\n使用Windows批处理脚本（推荐）\n\ndocker-deploy.bat\n\n或者使用Git Bash&#x2F;WSL\n\nbash docker-deploy.sh\n\n或者直接使用Docker Compose\n\ndocker-compose up -d –build\n\n\n5-核心功能以及演示5.1 核心功能🚀 自动回复系统\n智能关键词匹配 - 支持精确匹配和模糊匹配，灵活配置回复规则\nAI智能回复 - 集成多种AI模型（通义千问、GPT等），智能理解用户意图\n多账号管理 - 支持同时管理多个闲鱼账号，独立配置和运行\n实时消息处理 - WebSocket长连接，毫秒级响应用户消息\n自定义回复模板 - 支持占位符和动态内容，个性化回复体验\n\n🛒 自动发货系统\n智能订单识别 - 自动识别虚拟商品订单，精准匹配发货规则\n多重安全验证 - 超级加密保护，防止误操作和数据泄露\n批量处理能力 - 支持批量确认发货，提高处理效率\n异常处理机制 - 完善的错误处理和重试机制，确保发货成功\n多渠道通知 - 支持QQ、钉钉、邮件等多种发货通知方式\n\n👥 多用户系统\n用户注册登录 - 支持邮箱验证和图形验证码，安全可靠\n权限管理 - 管理员和普通用户权限分离，精细化权限控制\n数据隔离 - 每个用户的数据完全隔离，保护隐私安全\n会话管理 - JWT Token认证，支持自动续期和安全登出\n\n📊 数据管理\n商品信息管理 - 自动获取和同步商品信息，实时更新状态\n订单数据统计 - 详细的订单数据分析和可视化图表\n关键词管理 - 灵活的关键词配置，支持正则表达式\n数据导入导出 - 支持Excel格式的批量数据操作\n自动备份 - 定期自动备份重要数据，防止数据丢失\n\n🔍 商品搜索\n真实数据获取 - 基于Playwright技术，无头模式获取真实闲鱼商品数据\n多页搜索 - 支持分页搜索和批量获取，无限制数据采集\n智能排序 - 按”人想要”数量自动倒序排列，优先显示热门商品\n数据可视化 - 美观的商品展示界面，支持排序和筛选\n前端分页 - 灵活的前端分页显示，提升用户体验\n账号状态验证 - 自动检查cookies启用状态，确保搜索功能正常\n\n📱 通知系统\n多渠道支持 - QQ、钉钉、邮件、微信、Telegram等6种通知方式\n智能配置 - 可视化配置界面，支持复杂参数和加密设置\n实时推送 - 重要事件实时通知，及时了解系统状态\n通知模板 - 自定义通知内容和格式，个性化消息推送\n\n🔐 安全特性\nCookie安全管理 - 加密存储用户凭证，定期自动刷新\nToken自动刷新 - 智能检测和刷新过期Token，保持连接稳定\n操作日志 - 详细记录所有操作日志，支持审计和追踪\n异常监控 - 实时监控系统异常和错误，主动预警\n\n🎨 用户界面\n现代化设计 - 基于Bootstrap 5的响应式界面，美观易用\n多主题支持 - 支持明暗主题切换，个性化界面体验\n移动端适配 - 完美适配手机和平板设备，随时随地管理\n实时更新 - 界面数据实时更新，无需手动刷新\n\n5.2 工具演示登录页面\n注册页面\n首页\n账号管理\n商品管理\n订单管理\n自动回复\n指定商品回复\n自动发货\n消息通知支持平台\n用户管理\n6-结尾想说的话\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["电商工具"],"tags":["工具教程","闲鱼"]},{"title":"docker全系统安装教程","url":"/2025/09/02/12-%E5%85%A8%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85docker/","content":"1- 杨CC对工具的评价​\t一个非常牛逼的容器工具.没有之二.\n2- 安装教程2.1 Linux 系列安装docker教程2.1.1 ubuntu系列\nubuntu 24.02 &amp; Ubuntu 22 &amp; Ubuntu 20\n\n# Ubuntu 24/22/20 所有安装方式一致# 更新库sudo apt install update# 安装必要依赖包sudo apt install -y apt-transport-https ca-certificates curl software-properties-common# 添加Docker 官方GPG秘钥curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg# 添加Docker 软件源echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null# 安装Dockersudo apt updatesudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin# 验证dockersudo docker --version# 开机自启sudo systemctl start dockersudo systemctl enable docker\n\n2.1.2 radhat &#x2F;Centos系列\n当前教程通用于:Cent OS 7&#x2F;Centos 8&#x2F;Stream 8&#x2F;RHEL 7&#x2F;RHEL 8 &#x2F; RHEL 9\n\n# 安装必要依赖包sudo yum install -y yum-utils device-mapper-persistent-data lvm2\n\n\nCentOS 7 &#x2F; RHEL 7 安装教程\n\n# 添加 Docker 软件源sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装Docker 引擎sudo yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin# 验证dockersudo docker --version# 设置开启自启sudo systemctl start dockersudo systemctl enable docker\n\n\nCentOS 8 &#x2F; Stream 8 &#x2F; RHEL 8 安装教程\n\n# 添加软件源sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo# 安装必要的工具(解决兼容性问题)sudo dnf install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.4.3-3.1.el7.x86_64.rpm# 安装Docker sudo dnf install -y docker-ce docker-ce-cli docker-compose-plugin# 验证dockersudo docker --version# 设置开启自启sudo systemctl start dockersudo systemctl enable docker\n\n\nRHEL 9\n\n# 添加源 sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo# 安装Dockersudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin# 开启开机自启sudo systemctl start dockersudo systemctl enable docker# 验证dockersudo docker --version\n\n\n\n2.1.3 Arch系列安装docker\n该教程包含90% 以上的Arch系列都可使用.\n\n# 更新 系统包sudo pacman -Syu# 安装Docker 相关包sudo pacman -S docker docker-compose# 启动Docker服务sudo systemctl start docker# 设置开机自启sudo systemctl enable docker# 验证docker docker --version\n\n\n\n\n\n2.2 Windows 安装docker教程一、Windows 10&#x2F;11 桌面系统安装 Docker Desktop系统要求\nWindows 10 64 位：专业版、企业版或教育版（Build 19041+）\nWindows 11 64 位：家庭版或专业版\n必须启用 Hyper-V 和容器功能\n需开启硬件虚拟化支持（在 BIOS&#x2F;UEFI 中启用）\n\n安装步骤\n启用必要的 Windows 功能(如果没有打开记得运行这个)\n\n以管理员身份打开 PowerShell\n运行以下命令启用 Hyper-V 和容器功能：\n\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V, Containers -All\n\n\n完成后重启电脑\n\n\n下载 Docker Desktop\n\n访问 Docker 官网：https://www.docker.com/products/docker-desktop\n下载适用于 Windows 的安装程序\n\n\n安装 Docker Desktop\n\n双击安装文件（Docker Desktop Installer.exe）\n勾选 “Use WSL 2 instead of Hyper-V”（推荐，需已安装 WSL2）\n点击 “OK” 开始安装\n安装完成后点击 “Close and restart” 重启电脑\n\n\n验证安装\n\n重启后 Docker 会自动启动，在系统托盘可见 Docker 图标\n打开命令提示符或 PowerShell，运行：\n\ndocker --versiondocker run hello-world\n\n\n如看到欢迎消息，说明安装成功\n\n\n\n二、Windows Server 安装 Docker适用版本\nWindows Server 2016\nWindows Server 2019\nWindows Server 2022\n\n安装步骤\n卸载旧版本（如有的话,请运行这个）\nUninstall-Package -Name docker -ProviderName DockerMsftProviderRemove-Item -Path &quot;C:\\ProgramData\\Docker&quot; -Recurse -Force\n\n安装 Docker\n\n以管理员身份打开 PowerShell\n安装 Docker 提供程序：\n\nInstall-Module -Name DockerMsftProvider -Repository PSGallery -Force\n\n\n信任 Docker 仓库：\n\nSet-PSRepository -Name PSGallery -InstallationPolicy Trusted\n\n\n安装 Docker：\n\nInstall-Package -Name docker -ProviderName DockerMsftProvider\n\n启动 Docker 服务\nStart-Service docker\n\n设置 Docker 开机自启\nSet-Service docker -StartupType Automatic\n\n验证安装\ndocker --versiondocker run hello-world:nanoserver\n\n\n注意：Windows Server 上需使用 nanoserver 或 windowsservercore 标签的镜像\n\n\n\n2.3 Mac 系列安装docker教程\n下载 Docker Desktop for Mac\n\n访问 Docker 官网下载页面：https://www.docker.com/products/docker-desktop\n点击 “Download for Mac” 按钮，会自动根据你的芯片类型下载对应的版本（Intel 或 Apple Silicon）\n\n\n安装 Docker Desktop\n\n找到下载的.dmg文件（通常在 “下载” 文件夹中）\n双击.dmg文件打开安装窗口\n将 Docker 图标拖拽到 “Applications” 文件夹中完成安装\n\n\n启动 Docker\n\n打开 “应用程序” 文件夹，找到并点击 “Docker”\n首次启动时，系统会提示 “Docker” 是从互联网下载的应用，点击 “打开”\nDocker 会在菜单栏显示一个鲸鱼图标，表示正在启动\n启动完成后，鲸鱼图标会停止动画\n\n\n同意服务条款\n\n首次启动会显示服务条款，点击 “Accept” 接受\n\n\n验证安装是否成功\n\n打开 “终端” 应用（可通过 Spotlight 搜索 “终端”）\n\n运行以下命令检查 Docker 版本：\ndocker --version\n\n运行测试容器验证功能：\ndocker run hello-world\n\n如果看到 “Hello from Docker!” 的欢迎消息，说明安装成功\n\n\n\n\n3- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["电脑工具"],"tags":["工具教程","部署教程","安装教程"]},{"title":"Save Multiple URLs_快速获取网页中URL的浏览器插件","url":"/2025/08/22/3-Svae%20Multiple%20URLs_%E5%BF%AB%E9%80%9F%E4%BF%9D%E5%AD%98%E5%BD%93%E5%89%8D%E6%89%80%E6%9C%89%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5%E7%9A%84URL/","content":"1- 简介​\tSave Multiple URLs 是一个专为渗透测试人员、红队工程师、网络安全研究者打造的浏览器插件，便于快速保存当前所有打开的网页 URL，避免在测试过程中遗漏关键目标。\n2- 功能特点\n✅ 一键获取当前所有浏览器标签页的 URL\n✅ 支持复制 URL 到剪贴板\n✅ 支持导出 URL 为 .txt 文本文件\n✅ 界面简洁，操作便捷\n✅ 无需网络权限，纯本地操作，安全可靠\n\n3- 使用场景\n在对目标进行信息收集、目录遍历、页面测试时，临时打开了大量标签页，使用插件一键保存，避免手动记录出错。\n渗透测试项目报告撰写前，快速整理访问过的所有目标 URL。\n日常浏览多个测试站点时，便于归档保存以供后续分析。\n\n4- 使用截图\n5- 安装方式\n终端运行:  git clone https://github.com/exp3n5ive/Save-Multiple-URLs.git    (或者打开:https://github.com/exp3n5ive/Save-Multiple-URLs 下载这个项目)\n打开浏览器 chrome://extensions/\n打开「开发者模式」\n点击「加载已解压的扩展程序」，选择项目目录\n\n6- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","浏览器插件"]},{"title":"JSAPIscan 扫描工具_安装以及使用","url":"/2025/08/22/2-JSAPlscan-JS%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/","content":"1-简介​\t注意: 该软件非开源软件,请自行掂量.\n​\t一个go语言开发的js文件发现和接口扫描工具，专门用于从JavaScript文件中提取API接口信息并进行安全测试。\n2-功能特性\n🔍 智能API发现: 自动从JavaScript文件中提取API端点路径\n📱 多框架支持: 支持Webpack、Vue、React等现代前端框架的JS文件解析\n🚀 高性能扫描: 多线程并发处理，支持自定义线程数\n🛡️ 安全测试: 内置未授权访问测试和POC验证功能（POC预计0.3开放）\n📊 智能输出: 自动生成CSV报告和详细日志\n🔧 灵活配置: 支持批量URL扫描、自定义深度等\n📁 自动管理: 自动创建时间戳文件夹，结果分类存储\n\n3-下载安装​\t浏览器访问：https://pan.quark.cn/s/67b7123b8cbf\n​\t此链接包含Windows\\Linux 双版本,下载后可直接进行使用.\n4-使用教程4.1 Linux 使用教程.\\JSAPIscan_linux -h # 查看帮助\n\n\n4.2 Windows 使用教程JSAPIscan_windows.exe -h #查看帮助\n\n\n4.2.1 用法详情JSAPIscan_windows.exe -u https://www.baidu.com # 扫描单个url\n\n\n\nJSAPIscan_windows.exe -f urls.txt  # 批量扫描URL  urls.txt里面包含多个url,一行一个\n\n\n\nJSAPIscan_windows.exe -u https://www.baidu.com -t 20 -d 5  # 设置线程数和爬取深度\n\n\n\n4.2.2 其他用法JSAPIscan.exe -u https://example.com -auto # 启用自动接口测试（-auto 是未授权访问检测 不加只会爬取）\n\nJSAPIscan.exe -u https://example.com -auto -aparms # 携带参数进行测试\n\nJSAPIscan.exe -u https://example.com -auto -aparms -apoc # 启用POC测试 \n\nJSAPIscan.exe -f urls.txt -auto -t 15 -d 4  # 批量扫描并自动测试\n\n\n\n4.3 参数详情\n\n\n参数\n说明\n默认值\n示例\n\n\n\n-u\n目标URL\n-\n-u https://example.com\n\n\n-f\nURL文件路径\n-\n-f urls.txt\n\n\n-t\n线程数\n10\n-t 20\n\n\n-d\n爬取深度\n3\n-d 5\n\n\n-auto\n启用自动接口测试\nfalse\n-auto\n\n\n-aparms\n携带参数测试\nfalse\n-aparms\n\n\n-apoc\n启用POC测试\nfalse\n-apoc\n\n\n-h\n显示帮助信息\nfalse\n-h\n\n\n-sc\n不显示相关状态码\n“”\n-sc\n\n\n-o\n输出文件类型\n“txt”\ntxt、html\n\n\n-k\n只输出关键信息\nfalse\n&#96;&#96;\n\n\n5-支持的框架\nWebpack: 自动解析chunk.js文件\nVue.js: 识别Vue组件中的API调用\nReact: 支持React应用的JS文件分析\n通用JS: 支持标准JavaScript文件解析\n\n6- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\nP站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","信息收集工具"]},{"title":"GhostWolf_内存数据提取工具_下载安装和使用","url":"/2025/08/23/5-GhostWolf_%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7/","content":"1- 简介​\tGhostWolf 是一个强大的内存数据提取工具，专门设计用于从浏览器和远程控制软件中提取敏感信息。本项目基于 CookieKatz 项目开发，在其基础上扩展了更多功能。\n2- 主要功能\n浏览器 Cookie 提取\n支持 Chrome、Edge、Firefox 最新版本\n支持隐私模式下的 Cookie 提取\n直接从内存中读取数据，无需文件系统访问\n\n\n浏览器密码提取\n支持 Edge最新版本账户密码获取\n\n\nToDesk 信息提取\n支持读取 ToDesk 账户密码\n支持获取设备列表\n支持读取已保存的远程连接密码\n\n\n\n3- 下载安装及用法3.1 下载# 浏览器打开https://github.com/SickleSec/GhostWolf/releases/download/1.1/GhostWolf.exe# 进行下载,或者curl -O https://github.com/SickleSec/GhostWolf/releases/download/1.1/GhostWolf.exe#均可下载\n\n\n\n3.2 参数# 浏览器相关：    /edge       获取Edge浏览器的Cookie\t      /pass   获取Edge浏览器保存的所有密码    /chrome     获取Chrome浏览器的Cookie    /firefox    获取Firefox浏览器的Cookie# ToDesk相关：    /todesk     获取ToDesk凭据信息        /list   列出所有设备        /pass   列出所有设备密码# 其他：    /help       显示帮助信息（-h 同样可用）\n\n\n\n3.3 使用# 查看帮助GhostWolf.exe -h\n\n\n# 获取edge浏览器保存的所有密码GhostWolf.exe /edge pass\n\n\n# 获取google浏览器的cookieGhostWolf.exe /chrome# 哈哈,有点多,所以我就打码了\n\n\n# 其他用法# 请参考3.2参数\n\n4- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","内存工具"]},{"title":"本地部署无限制AI(SillyTavern)-可黄(本地部署酒馆)_Windows","url":"/2025/08/24/7-%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%97%A0%E9%99%90%E5%88%B6AI/","content":"1- 简介​\t由于up本身追求方便快捷,所以我们以docker搭建为主.\n2- docker配置文件安装docker教程,请点击:https://ycc77.com/2025/09/02/12-%E5%85%A8%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85docker/\n# 将下面代码放在自己的文件夹中,并命名为:docker-compose.yml# 或者创建docker-compose.yml,再将下面代码写入文件中services:  sillytavern:    build: ..    container_name: sillytavern    hostname: sillytavern    image: ghcr.io/sillytavern/sillytavern:latest    environment:      - NODE_ENV=production      - FORCE_COLOR=1    ports:      - &quot;8000:8000&quot;    volumes:      - &quot;./config:/home/node/app/config&quot;      - &quot;./data:/home/node/app/data&quot;      - &quot;./plugins:/home/node/app/plugins&quot;      - &quot;./extensions:/home/node/app/public/scripts/extensions/third-party&quot;    restart: unless-stopped    \n\n\n\n3- 下载和运行# Windows需要下载docker# Linux 也需要下载docker# MacOs 也需要下载docker# 下载酒馆必要文件docker compose up\n\n\n# 需要等待完成# 完成后,拉取稳定分支的酒馆git clone https://github.com/SillyTavern/SillyTavern# 由于文件较大,可能需要稍微等待一下.\n\n\n# 完成后进入目录cd SillyTavern/docker# 运行酒馆AIdocker compose up -d\n\n\n# 等待下载文件并运行.很慢...\n\n\n# 查看容器IDdocker network inspect docker_default# 找到相关的ip地址&quot;Gateway&quot;:&quot;XXX.XXX.XXX.XXX&quot; 为ip地址,如图:\n\n\n# 设置对应ip到配置文件# 打开config\\config.yaml 文件# 找到: whitelist: 参数# 按照下方的格式,进行编写.# 注意 172.18.0.1 是Gateway的参数.请编写自己的Gateway参数\n\n\n# CTRL+S 保存后,退出.# 然后重新启动docker容器,用来应用新的配置docker compose restart sillytavern\n\n\n# 出现这样的表示,代表正确# 访问:http://localhost:8000/# 如果可以正常访问,就说明部署完成了# 部署完成,如下图\n\n\n4- 配置\n设置中文\n\n设置角色名称\n\n进入首页\n\n配置本地API(请查看)\n运行本地的AI.\nollama run deepseek-r1:7b\n按照下图中的顺序,设置本地的AI\n\n然后填写本地的API连接,如图\n\n然后点击链接.\n检测通过后即可正常开始聊天\n如果想要使用官方API,请按照下图配置\n\n从上往下挨个选择\n点击连接后,出现下图为可正常使用\n\n\n5- 给自己安排一个角色.\n如下图,创建一个新的角色\n\n通过右方的简介和其他配置,设定自己喜欢的角色.\n\n6- 开始聊天\n\n\n7- 下载自己喜欢的AI角色卡\n网站1: https://chub.ai/ (推荐)\n网站2: https://aicharactercards.com/\n网站3: https://jannyai.com/\n注意: 下载的时候需要下载JSon的文件,如下图\n\n\n8- 导入角色卡\n如下图\n\n从上向下点击\n然后选择对应json文件,点击打开\n\n点击打开后就导入了,就可以正常聊天了.\n\n然后到这里,就已经完成了!!!\n\n9- 错误以及解决方案Q = 遇见的问题  A = 回答问题Q: unable to get image &#x27;ghcr.io/sillytavern/sillytavern:latest&#x27;: error during connect: Get &quot;http://%2F%2F.%2Fpipe%2FdockerDesktopLinuxEngine/v1.51/images/ghcr.io/sillytavern/sillytavern:latest/json&quot;: open //./pipe/dockerDesktopLinuxEngine: The system cannot find the file specified.A: 出现上述报错,请运行dockerQ: Cloning into &#x27;SillyTavern&#x27;...fatal: unable to access &#x27;https://github.com/SillyTavern/SillyTavern/&#x27;: Failed to connect to github.com port 443 after 21076 ms: Could not connect to serverA: 请检查梯子,重新运行,重新下载\n\n\n\n10- 结束语\n禁!!!!禁止!!!!禁止把色情模型部署到公网!!!!!!!!!!!!!!!\n\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n\n需要资源,记得将yancy77.cn 添加到书签栏哦~\n\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n\n抖音: 疯狂的杨CC\n\n快手: 疯狂的杨CC\n\n91: 疯狂的杨CC\n\np站: 疯狂的杨CC\n\n\n","categories":["AI部署"],"tags":["部署教程","无限制AI"]},{"title":"web-check_网站全能信息收集工具","url":"/2025/09/02/11-web-check_%E5%85%A8%E8%83%BD%E7%BD%91%E7%AB%99%E7%9B%91%E6%B5%8B/","content":"1- 杨CC对工具的评价​\t方便又快捷,但对国外的网站收集效率较高,国内的网站稍微差点,但整体来讲还算不错.\n2- 在线演示\nhttps://web-check.xyz/\n访问上方网站,然后按照图片方式进行操作\n\n实际情况如下图\n\n获取情况如下\n\n中文界面如下:\n\n\n3- 本地搭建3.1 使用Docker搭建(推荐)\n安装docker教程,请点击:https://ycc77.com/2025/09/02/12-%E5%85%A8%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85docker/\n\nLinux\n\n\n# 需要提前安装docker,宝塔和1p都可以正常搭建docker run -p 3000:3000 lissy93/web-check# 随后访问:localhost:3000 即可正常访问\n\n\nWindows\n\n# 需要提前安装docker-desktop ,并且运行docker-desktopdocker run -p 3000:3000 lissy93/web-check# 随后访问:localhost:3000 即可正常访问\n\n\n\n3.2 从源码安装(不建议)\nLinux+Windows均可\n\n# Windows\\Linux需要提前安装git 和 npm 或 yarngit clone https://github.com/Lissy93/web-check.git  # 从github拉取文件cd web-check                                        # 进入目录yarn install                                       # 安装npm依赖库yarn build                                         # 编译yarn serve                                         # 开启# 随后访问:localhost:3000 即可正常访问\n\n\n\n4- 本地搭建后的效果\n请查看B站:疯狂的杨CC  本地搭建效果(因为发布文章的时候,还没有录制视频)\n\n5- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","信息收集工具","在线工具"]},{"title":"FLYsecAgent_一个可以利用AI渗透的离谱项目_当前工具无视频","url":"/2025/08/24/6-FLYsecAgent_%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8AI%E6%B8%97%E9%80%8F%E7%9A%84%E7%A6%BB%E8%B0%B1%E9%A1%B9%E7%9B%AE/","content":"1- 简介FLYsecAgent_这是一个基于大语言模型和MCP（Model-Controller-Plugin）和Rag架构的网络安全智能助手项目。它旨在通过自然语言交互，帮助用户执行渗透测试任务、查询安全信息、分析流量包等。\n\n2-功能\n自然语言交互: 用户可以通过自然语言向AI助手提问和下达指令。\nMCP服务器集成: 通过 mcp.json 配置文件，可以灵活集成和管理多个MCP服务器，扩展助手的能力。\n工具调用: AI助手能够根据用户请求，调用配置的MCP服务器提供的工具（例如：nmap, gobuster, fofa, tavily-search等）。\n对话历史记忆: 支持多轮对话，能够记住之前的交互内容。\n流式输出: AI的回答可以流式输出，提供更好的用户体验。\n知识库增强 (可选): 支持通过本地知识库Rag（knowledge_base_docs目录）来增强AI的回答质量。\n可配置模型: 支持配置不同的语言模型参数。\n\n\n3- 安装及使用\n克隆仓库\n\ngit clone https://github.com/hnking-star/FlySecAgent.git\ncd FlySecAgent\n3. 创建虚拟环境4. ```   python -m venv .venv\n\n\n启动虚拟环境\n\n.venv\\Scripts\\activate\n7. 安装环境依赖8. ```   pip install -r requirements.txt\n\n\n运行start.bat,自动安装必需品\n\nstart.bat\n11. 退出虚拟环境12. ```    deactivate\n\n\n\n4- 使用方法\n配置MCP服务器: 修改 mcp.json 文件，根据您的环境和需求配置MCP服务器。确保每个服务器的启动命令和参数正确无误。例如，您可能需要更新 TAVILY_API_KEY 或其他服务器特定的路径&#x2F;参数。\n\n准备知识库 (可选): 如果您希望使用知识库增强功能，请将相关的文本文件（例如 .txt）放入 knowledge_base_docs 文件夹中。\n\n运行主程序:\npython main.py\n\n程序启动后，您可以根据提示输入您的问题或指令。\n\n\n\n5- 文件结构agent/├── .venv/                  # Python虚拟环境 (被.gitignore忽略)├── knowledge_base_docs/    # 知识库文档存放目录│   └── ...├── .gitignore              # Git忽略文件配置├── main.py                 # 主程序入口├── mcp.json                # MCP服务器配置文件├── rag_embedding.py        # RAG嵌入相关 (如果使用)├── rag_split.py            # RAG文本分割相关 (如果使用)├── README.md               # 项目说明文件├── requirements.txt        # Python依赖列表├── LICENSE                 # 项目许可证└── ... (其他脚本或配置文件)\n\n\n\n6- 配置文件 (.env)BASE_URL=https://api.302.aiAPI_KEY=your_r_api_keyMODEL_NAME=gpt-4oEMBEDDING_API_KEY=your_embedding_api_keyOPENAI_BASE_URL=https://dashscope.aliyuncs.com/compatible-mode/v1\n\n上面对应的是所用模型api和key，下面对应的是embedding的key和url（使用阿里云的）\n7- 配置文件 (mcp.json)此文件用于定义AI助手可以连接和使用的MCP服务器。每个服务器条目应包含:\n\nname: 服务器的唯一名称。\nparams: 启动服务器所需的参数，通常包括 command 和 args。\ncache_tools_list: 是否缓存工具列表。\n\nMCP示例服务器配置:\nstdio\n&#123;  &quot;name&quot;: &quot;tavily-search&quot;,  &quot;params&quot;: &#123;    &quot;command&quot;: &quot;uv&quot;,    &quot;args&quot;: [      &quot;--directory&quot;,      &quot;F:\\\\ai\\\\mcp\\\\mcp_tool\\\\mcp-server-tavily&quot;,      &quot;run&quot;,      &quot;tavily-search&quot;    ],    &quot;env&quot;: &#123;      &quot;TAVILY_API_KEY&quot;: &quot;your_tavily_api_key_here&quot;,      &quot;PYTHONIOENCODING&quot;: &quot;utf-8&quot;    &#125;  &#125;,  &quot;cache_tools_list&quot;: true&#125;\n\n请确保将示例中的路径和API密钥替换为您自己的配置。\nsse\n&#123;&quot;name&quot;:&quot;mcpname&quot;,      &quot;url&quot;:&quot;http://127.0.0.1:8009/sse&quot;&#125;,\n\n\n\n8- 知识库配置# 在knowledge_base_docs添加相应的文件即可\n\n\n\n9- 截图\n\nsqlmap调用结果\n\n\n\n10- 报错以及处理Q = 报错 , A = 所需运行命令Q: ModuleNotFoundError: No module named &#x27;agents&#x27;A: python -m pip install agentsQ: ModuleNotFoundError: No module named &#x27;ollama&#x27;A: pip install ollamaQ: 如果多次提示:ModuleNotFoundError: No module named &#x27;XXX&#x27;A: 请运行: python -m pip install -r requirements.txtQ: 如果下载很慢怎么办?A: 使用国内源Q: AttributeError: module &#x27;tensorflow&#x27; has no attribute &#x27;contrib&#x27;A: pip install contrib \n\n\n\n11- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","AI工具"]},{"title":"测试文章","url":"/2025/08/20/google-chrome-%E5%8F%96%E8%AF%81/","content":"1-简介谢谢小星星\n","categories":["电子取证"],"tags":["浏览器","取证技术"]},{"title":"幻影（Phantom）SRC漏洞挖掘辅助工具","url":"/2025/08/23/4-%E5%B9%BB%E5%BD%B1(Phantom)Src%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/","content":"1- 简介​\t主要用于SRC的漏洞挖掘.\n​\t所处位置:https://yancy77.cn/penetration.html  -&gt; 插件\\扩展板块 -&gt;幻影(Phantom) SRC漏洞挖掘辅助工具\n2- 特性概览\n一键基础扫描：自动提取页面内的API、URL、域名、邮箱、手机号、路径、参数、注释、多类Token&#x2F;Key等\n深度梯度扫描：梯度链接&#x2F;资源爬取，支持梯度、超时配置，并在新闻中运行，不阻塞当前操作\n批量API测试：对扫描到的分类入口进行GET&#x2F;POST批量测量，并发与超时可配置，结果支持复制\n导出能力：支持JSON与Excel（.xls XML格式）两种导出\n自定义规则则：内置丰富的默认规则，可在「设置」中按分类自定义规则则并即时生效\nCookie支持：可一键获取当前站点Cookie并保存，然后需要鉴权的请求场景\n去重与过滤：内置强化过滤器（域名&#x2F;邮箱&#x2F;手机号&#x2F;API），减少误报\n自动与增量：页面加载、DOM变化与定时策略触发静默扫描；深度扫描过程中分层&#x2F;分批实时合并与展示\n\n3- 安装3.1 有git命令的安装方式打开终端,进入想下载的目录,运行:\n\ngit clone https://github.com/Team-intN18-SoybeanSeclab/Phantom.git\n\n\n\n打开google浏览器或者edge浏览器扩展插件页面\n\n\n\n然后选择对应的文件夹\n\n\n\n\n\n将这个工具固定在插件栏即可.\n\n随后,即可正常使用了\n\n\n\n\n3.2 没有git命令的安装方式\n点击下方链接,进行下载\nhttps://github.com/Team-intN18-SoybeanSeclab/Phantom/releases/download/1.6.7/Phantom.v1.6.7.zip\n下载完成后,打开浏览器的插件页面\n随后将文件解压出来,在浏览器中加载已解压的扩展程序.\n选择对应的目录,即可安装该插件\n\n\n4- 使用教程\n基础扫描\n\n\n深度扫描\n\n\n批量API测试\n\n\n导出文件\n\n自定义正则表达式\n\n指定Cookie\n\n关于界面\n\n\n5- 结束语\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n需要资源,记得将yancy77.cn 添加到书签栏哦~\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n抖音: 疯狂的杨CC\n快手: 疯狂的杨CC\n91: 疯狂的杨CC\np站: 疯狂的杨CC\n\n","categories":["渗透工具"],"tags":["工具教程","浏览器插件","SRC挖掘"]},{"title":"LingJing-一款可以让你三秒钟部署靶机的工具,重要的是免费,还好用","url":"/2025/08/26/8-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E9%9D%B6%E5%9C%BA/","content":"1- 杨CC对工具的简介​\t这是一个可以让你很简单部署靶场的工具,叫做:LingJing\n​\t非常强大的一款工具,而且更新频率,以及更新内容,也只会越来越多,越来越强.\n​\tgithub：https://github.com/414aaj/LingJing\n2- 免责声明​\t本平台致力于网络安全研究和教育目的，旨在提供具备专业技能的白帽渗透测试人员进行的渗透测试和安全评估。非相关人员抢救随意使用或报警。任何授权的网络渗透、入侵或对他人网络的破坏行为均违反法律规定，用户均视为自行负责。该平台开发者及分享者因用户侵犯或非法使用平台导致的任何后果承担责任。请务必遵守现行相关法律法规。\n3- 靶场搭建流程3.1 搭建图\n\n3.2 软件截图\n\n\n\n4- 官方简介***\tLingJing是一款专为复杂网络环境渗透测试训练打造的桌面级本地网络安全靶场平台。支持在线下载和免配置一键配置*靶机环境，平台内置路由管理、监控打靶流量，快速启动靶机，满足从入门学习到红蓝队攻防实战训练的需求。后续版本将更新攻击机机器，进一步完善渗透测试打靶场的完整流程，显着提升用户的训练体验和效率。本平台基于Go+Fyne构建图形，基本采用QEMU虚拟化技术，支持跨架构靶机启动。并且能够在Mac M系列芯片设备上启动AMD64靶机架构，确保在不同的硬件环境下开展无缝测试与训练。\n​\t灵境平台的靶场资源丰富多样，开源靶场靶机以及本平台后续上线的原创靶机。（正在尝试创新设计一种打靶模式：以2D RTS游戏风格实现互联网侧和近源渗透实景模拟，为用户带来全新的训练体验（如蒙支持，为创作提供持续动力））。这些靶场资源覆盖广泛的安全技术方向，满足教育教学、培训专业与实战演练的需求，包括但不限于：\n\nWeb安全测试：涵盖SQL注入（包括盲注、报错注入、联合查询）、跨站脚本（XSS）、文件上传漏洞、CSRF、命令执行、信息泄露等攻击面；\n内网渗透与域环境攻击：支持多层网络与域控环境部署，适用于横向移动、权限提升、Kerberos 窃听、NTLM 中继、域信任攻击等高层内网技术；\n中间件与框架漏洞复现：包括Apache、Nginx、Tomcat、Struts2、Spring等主流组件的漏洞验证与环境搭建；\nJava应用安全：集成Java Web漏洞、反序列化链分析、安全编码误区等内容；\n业务逻辑与客户端安全：适用于身份认证绕过、权限控制缺陷、弱加密机制等漏洞的演练和教学；\n红队攻防与实战演练：支持多跳通信、端口转发、代理链、隧道技术等对抗场景的战术部署与验证。\n\n平台特点：\n\n高效部署：靶机环境可通过平台一键下载、免配置安装，实现高效部署，大大节省时间和精力。\n秒级启动：单靶机启动时间在5至30秒（域环境——域成员和域控启动后需要时间建立通信，因此启动速度相对较慢），具体运行与物理机性能密切相关。\n严格网络控制：靶机通信由平台内部路由进行严格控制，禁止出网访问，保障网络环境的安全与稳定。\n在线更新功能：平台具备在线更新功能，可及时同步最新版本，确保用户始终使用最新功能和安全修复。\n轻量级镜像：镜像压缩体积更小，节省存储空间，同时可以快速下载和部署。\n下载：靶机采用云端多节点部署，支持断点续传高速下载，进一步提升用户体验。\n\n灵境平台旨在提升跨架构兼容性、提供丰富的靶场资源以及灵活的配置能力，为网络安全学习者和从业者提供一个快速、真实的实战训练环境，助力每一位用户在网络安全领域成长。\n注：因涉及用户本地与云端靶机镜像下载，为保障用户侧和服务端安全性，平台项目代码暂不开源。如有需求，平台相关技术的实现可在脱敏前提下进行讨论分享。\n​\t\n5- 靶场环境(8月26号)​\t外部靶机：集成渗透靶场、开源靶机环境或合作方定制靶场\n​\t灵境靶机：自制原创靶机环境或渗透测试实战脱敏靶机环境\n​\t灵晶平台目前已部署靶机环境44套：\n\nVulnStack 6套\nvulhub 10套\nvulnhub 10套\nvulntarget 7套\nVulNyx 2套\nDVWA 1套\nsqli-labs 1套\n上传实验室 1 套\nxss-labs 1套\n皮卡丘 1套\nWebGoat 1套\nJavaSecLab 1套\n韦虫1套\nDVGA 1套\n后续还会继续更新……\n\n6- 系统兼容性列表\n\n\n操作系统（架构）\n兼容情况说明\n\n\n\nMacOS (Arm64)\n已兼容基于 M1、M2 和 M4 芯片的 Mac 设备，M3 芯片暂未测试。\n\n\nWindows (AMD64)\n支持 Windows 10 和 Windows 11，为 Windows 用户提供了稳定的运行环境。Windows 7 不在支持范围内，服务器版本尚未进行测试。\n\n\nLinux\n暂不支持\n\n\n7- 下载与安装7.1 下载\n手动下载（建议）\n\n# 进入yancy77.cn，菜单栏-》渗透测试工具 -》 靶场搭建工具 -》 LingJing -》 进入后找到releases，即可下载\n\n\n使用curl自动下载（通过下述方式下载则为：0.2.2版本）\n\n# Windows 版本curl -O https://github.com/414aaj/LingJing/releases/download/0.2.2/LingJing_windows_amd64.zip# Mac版本curl -O https://github.com/414aaj/LingJing/releases/download/0.2.2/LingJing_darwin_arm64.zip\n\n7.2 安装7.2.1 Mac 安装\nMac 安装\n把app移动到应用程序内，在其他路径下运行可能会出错\n\n\n\n如果遇到:【 “LingJing”已损坏，无法打开。你应该将它移到废纸篓。】报错时，执行以下令：\nsudo xattr -rd com.apple.quarantine &#x2F;Applications&#x2F;LingJing.app\n安装依赖\nbrew install capstone gnutls pixman jpeg-turbo snappy lzo dtc glib zstd libslirp vde ncurses libusb libssh libpng\n\n7.2.2 Windows安装\n下载解压后将LingJing文件夹放置于合适的盘符位置即可（PS:避开中文目录，否则路由可能无法启动）\n\n初次安装需要管理员授权安装网卡。\n\n\n\n\n\n\n\n\n\n网卡安装成功会弹出是否重启物理机对话框(若不重启，当联动外部虚拟机软件时，可能无法找到LingJing网卡)，重启后会看到一张名为LingJing的tap网卡，且路由状态为非红色(若网卡安装成功，但路由状态为红色，则需要尝试重启路由)。\n\n\n\n\n\n点击托盘设置好路径\n\n\n\n\n\n\n8- 使用方法\n靶机下载完后，启动靶机前需要路由为非红色状态且获取到IP地址\n\n靶机启动后，通过IP访问相应服务\n\n\n9- 卸载​\t卸载:Mac物理机直接删除app即可，Windows物理机需要从平台卸载网卡(或其他方式手动卸载)\n10- 结束语\n这款工具是由414a大佬进行的独立开发\\维护,若您喜欢本项目,可通过给GitHub项目加星标或微信公众号文章打赏的方式支持项目持续发展,当然,并不是打上给杨CC,而是414a大佬.\n\n414a大佬公众号为:Sec铁匠铺,如下图\n\n\n\n其他结束语如下:\n\n需要技术文章,记得将ycc77.com 添加到书签栏哦~\n\n需要资源,记得将yancy77.cn 添加到书签栏哦~\n\nB站: 疯狂的杨CC(需要使用视频,请选择这个)\n\n抖音: 疯狂的杨CC\n\n快手: 疯狂的杨CC\n\n91: 疯狂的杨CC\n\np站: 疯狂的杨CC\n\n\n","categories":["渗透工具"],"tags":["工具教程","靶场部署"]},{"title":"动漫共和国_一个手机上免费看动漫的软件(每日福利)","url":"/2025/08/31/%E6%AF%8F%E6%97%A5%E7%A6%8F%E5%88%A9-1_%E6%89%8B%E6%9C%BA%E5%85%8D%E8%B4%B9%E7%9C%8B%E5%8A%A8%E6%BC%AB%E8%BD%AF%E4%BB%B6/","content":"1- 杨CC对工具的评价​\t包含了很多动漫,日漫\\国漫\\美漫…等很多漫画.对于爱看动漫的朋友,是非常不错的.\n2- 截图如下\n首页\n\n日漫\n\n国漫\n\n剧场\n\n美漫\n\n特设\n\n动态漫画\n\n\n3- 详细分类截图\n国漫\n\n\n\n\n\n由于分类下确实太多,所以就不再进行完全的展示了.\n4- 说明​\t这个软件包含了太多的漫画了,国漫的斗破苍穹\\完美世界\\练气3000年\\诸天纪\\武动乾坤\\一人之下….等等…太多了,而且也包含了多种日漫,像什么,火影忍者\\海贼王\\怪兽八号\\柯南\\等等,太多了,我这里一时半会说不完.总而言之就是很牛逼的看漫画软件就对了\n5- 下载方式​\t访问:yancy77.cn -&gt; 菜单栏 - &gt; 其他资源 - &gt; 手机工具 - &gt; 共和国漫画\n如下图:\n\n","categories":["每日福利"],"tags":["手机工具","看动漫"]}]